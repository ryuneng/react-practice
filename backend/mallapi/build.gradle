plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	
	// ModelMapper : DTO <-> 엔티티 처리를 수월하게 할 수 있는 라이브러리
	// ---> 서비스 계층의 파라미터와 리턴 타입은 DTO를 이용하지만, 내부적으로는 엔티티 객체를 사용해야 하는 경우가 많기 때문에 사용
	implementation 'org.modelmapper:modelmapper:3.1.1'

	// 썸네일 이미지 처리 라이브러리
	implementation 'net.coobird:thumbnailator:0.4.19'
}

tasks.named('test') {
	useJUnitPlatform()
}
